#include "TFile.h"
#include "TH1F.h"
#include "TH2F.h"
#include "TTree.h"
#include "TAxis.h"
//#include "CLHEP/Vector/LorentzVector.h"
#include "TRandom.h"

#include <string>

#include <iostream>
#include <fstream>

//#define PU_UP   
//#define PU_DN

#include "CondFormats/JetMETObjects/src/Utilities.cc"
#include "CondFormats/JetMETObjects/src/JetCorrectorParameters.cc"
#include "CondFormats/JetMETObjects/src/SimpleJetCorrectionUncertainty.cc"
#include "CondFormats/JetMETObjects/src/JetCorrectionUncertainty.cc"


using namespace std;  

const float pival = acos(-1.);

static const int nalgo = 12 ;
const char* JetRad[nalgo] = {"ak1","ak2","ak3","ak4","ak5","ak6","ak7","ak8","ak9","ak10","ak11","ak12"};
static const int netarange = 10 ;
const char* JetEta[netarange] = {"|eta|<0.5","0.5<|eta|<1.0","1.0<|eta|<1.5","1.5<|eta|<2.0","2.0<|eta|<2.5","2.5<|eta|<3.0","3.0<|eta|<3.2","3.2<|eta|<3.7","3.7<|eta|<4.2","4.2<|eta|<4.7"} ;
double etarng[netarange+1] ={0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.2, 3.7, 4.2, 4.7};

const int noptbins = 62 ;
  
double ptbins[noptbins+1] = {/*30, 37, 43, 49, 56, 64,*/ 74, 84,
     97, 114, 133, 153, 174, 196, 220, 245, 272, 300, 330, 362, 395, 430, 468, 
     507, 548, 592, 638, 686, 737, 790, 846, 905, 967, 
     1032, 1101, 1172, 1248, 1327, 1410, 1497, 1588, 1684, 1784, 1890, 2000, 
     2116, 2238, 2366, 2500, 2640, 2787, 2941, 3103, 3273, 3450, 3637, 3832,
     4037, 4252, 4477, 4713, 4961, 5220, 5492, 5777, 6076, 6389, 6717, 7000} ;

const int noptbins1 = 68 ;

double ptbins1[noptbins1+1] = {30, 37, 43, 49, 56, 64, 74, 84,
     97, 114, 133, 153, 174, 196, 220, 245, 272, 300, 330, 362, 395, 430, 468,
     507, 548, 592, 638, 686, 737, 790, 846, 905, 967,
     1032, 1101, 1172, 1248, 1327, 1410, 1497, 1588, 1684, 1784, 1890, 2000,
     2116, 2238, 2366, 2500, 2640, 2787, 2941, 3103, 3273, 3450, 3637, 3832,
     4037, 4252, 4477, 4713, 4961, 5220, 5492, 5777, 6076, 6389, 6717, 7000} ;
     
 const double minPFPt = 20.;    
     
 const int npileupmx = 80;
 
 const int nHLTmx= 10; 
 double leadingPtThreshold[nHLTmx+1]= {74, 97, 133, 196, 272, 330, 395, 468, 548, 592, 5000.0};
// double leadingPtThreshold[nHLTmx+1] ={74, 97, 114, 174, 245, 300, 362, 468, 507, 592, 5000.} ;
 const char* jethlt_name[nHLTmx] = {"HLT_AK8PFJet40_v", "HLT_AK8PFJet60_v",
                                 "HLT_AK8PFJet80_v", "HLT_AK8PFJet140_v", "HLT_AK8PFJet200_v",
                                 "HLT_AK8PFJet260_v", "HLT_AK8PFJet320_v",
                                 "HLT_AK8PFJet400_v", "HLT_AK8PFJet450_v", "HLT_AK8PFJet500_v"} ;

double compres[nHLTmx] = {0};

double compres15[nHLTmx] = {133490.64,17310.168,4567.035,868.165,117.545,11.427,5.46,2.466,1.0002,1.0};
double compresB[nHLTmx] = {642980.,72759.1,22884.3,2235.47,223.757,47.8042,16.9884,5.42371,1.,1.} ;
double compresC[nHLTmx] = {576174.,81695.1,25718.3,2569.92,255.795,53.4,19.0319,6.23305,1.,1.};
double compresD[nHLTmx] = {580101.,81285.6,25916.5,2534.28,252.871,55.5829,18.8895,6.22492,1.,1.};
double compresE[nHLTmx] = {641478.,92969.,29772.8,2904.08,307.486,61.3483,20.9706,6.88494,1.,1.};
double compresF[nHLTmx] = {660909.,111157.,40255.3,3670.99,465.406,69.2093,23.2046,7.78581,1.,1.};
double compresG[nHLTmx] = {774248.665,122319.611,40851.372,4168.971,630.5287,73.69957,24.33146,8.2079,1.,1.};
double compresH[nHLTmx] = {726646.691,131051.757,43288.608,4508.252,680.906,77.707,25.935,8.816,1.,1.} ;
 
 double datpileup[nHLTmx][npileupmx] = {{6.54008e-06,2.29383e-05,6.32223e-05,8.55796e-05,0.000122592,0.000164214,0.000191738,0.000353072,0.000965735,0.00215544,0.00484612,0.00986199,0.0165083,0.0240058,0.032166,0.0407818,0.0481844,0.0532395,0.0561219,0.0575573,0.058412,0.0588587,0.0583078,0.056491,0.0537587,0.0504445,0.0466722,0.0425747,0.0383287,0.0340574,0.0298202,0.0256705,0.0216922,0.0179859,0.0146378,0.011698,0.00917774,0.00705846,0.00530639,0.00388441,0.00275715,0.00189012,0.00124723,0.000790064,0.000479456,0.00027833,0.000154405,8.18145e-05,4.14101e-05,2.00435e-05,9.30691e-06,4.17785e-06,1.84606e-06,8.3504e-07,4.1498e-07,2.45829e-07,1.77914e-07,1.48846e-07,1.33924e-07,1.23839e-07,1.1526e-07,1.07079e-07,9.89863e-08,9.09467e-08,8.30145e-08,7.52676e-08,6.77837e-08,6.06312e-08,5.38664e-08,4.75325e-08,4.16595e-08,3.62653e-08,3.1356e-08,2.69281e-08,2.29691e-08,1.94598e-08,1.63753e-08,1.36867e-08,1.13622e-08,9.36881e-09}
										 ,{6.54008e-06,2.29383e-05,6.32223e-05,8.55796e-05,0.000122592,0.000164214,0.000191738,0.000353072,0.000965735,0.00215544,0.00484612,0.00986199,0.0165083,0.0240058,0.032166,0.0407818,0.0481844,0.0532395,0.0561219,0.0575573,0.058412,0.0588587,0.0583078,0.056491,0.0537587,0.0504445,0.0466722,0.0425747,0.0383287,0.0340574,0.0298202,0.0256705,0.0216922,0.0179859,0.0146378,0.011698,0.00917774,0.00705846,0.00530639,0.00388441,0.00275715,0.00189012,0.00124723,0.000790064,0.000479456,0.00027833,0.000154405,8.18145e-05,4.14101e-05,2.00435e-05,9.30691e-06,4.17785e-06,1.84606e-06,8.3504e-07,4.1498e-07,2.45829e-07,1.77914e-07,1.48846e-07,1.33924e-07,1.23839e-07,1.1526e-07,1.07079e-07,9.89863e-08,9.09467e-08,8.30145e-08,7.52676e-08,6.77837e-08,6.06312e-08,5.38664e-08,4.75325e-08,4.16595e-08,3.62653e-08,3.1356e-08,2.69281e-08,2.29691e-08,1.94598e-08,1.63753e-08,1.36867e-08,1.13622e-08,9.36881e-09}
										 ,{6.54008e-06,2.29383e-05,6.32223e-05,8.55796e-05,0.000122592,0.000164214,0.000191738,0.000353072,0.000965735,0.00215544,0.00484612,0.00986199,0.0165083,0.0240058,0.032166,0.0407818,0.0481844,0.0532395,0.0561219,0.0575573,0.058412,0.0588587,0.0583078,0.056491,0.0537587,0.0504445,0.0466722,0.0425747,0.0383287,0.0340574,0.0298202,0.0256705,0.0216922,0.0179859,0.0146378,0.011698,0.00917774,0.00705846,0.00530639,0.00388441,0.00275715,0.00189012,0.00124723,0.000790064,0.000479456,0.00027833,0.000154405,8.18145e-05,4.14101e-05,2.00435e-05,9.30691e-06,4.17785e-06,1.84606e-06,8.3504e-07,4.1498e-07,2.45829e-07,1.77914e-07,1.48846e-07,1.33924e-07,1.23839e-07,1.1526e-07,1.07079e-07,9.89863e-08,9.09467e-08,8.30145e-08,7.52676e-08,6.77837e-08,6.06312e-08,5.38664e-08,4.75325e-08,4.16595e-08,3.62653e-08,3.1356e-08,2.69281e-08,2.29691e-08,1.94598e-08,1.63753e-08,1.36867e-08,1.13622e-08,9.36881e-09}
										 ,{6.54008e-06,2.29383e-05,6.32223e-05,8.55796e-05,0.000122592,0.000164214,0.000191738,0.000353072,0.000965735,0.00215544,0.00484612,0.00986199,0.0165083,0.0240058,0.032166,0.0407818,0.0481844,0.0532395,0.0561219,0.0575573,0.058412,0.0588587,0.0583078,0.056491,0.0537587,0.0504445,0.0466722,0.0425747,0.0383287,0.0340574,0.0298202,0.0256705,0.0216922,0.0179859,0.0146378,0.011698,0.00917774,0.00705846,0.00530639,0.00388441,0.00275715,0.00189012,0.00124723,0.000790064,0.000479456,0.00027833,0.000154405,8.18145e-05,4.14101e-05,2.00435e-05,9.30691e-06,4.17785e-06,1.84606e-06,8.3504e-07,4.1498e-07,2.45829e-07,1.77914e-07,1.48846e-07,1.33924e-07,1.23839e-07,1.1526e-07,1.07079e-07,9.89863e-08,9.09467e-08,8.30145e-08,7.52676e-08,6.77837e-08,6.06312e-08,5.38664e-08,4.75325e-08,4.16595e-08,3.62653e-08,3.1356e-08,2.69281e-08,2.29691e-08,1.94598e-08,1.63753e-08,1.36867e-08,1.13622e-08,9.36881e-09}
										 ,{6.54008e-06,2.29383e-05,6.32223e-05,8.55796e-05,0.000122592,0.000164214,0.000191738,0.000353072,0.000965735,0.00215544,0.00484612,0.00986199,0.0165083,0.0240058,0.032166,0.0407818,0.0481844,0.0532395,0.0561219,0.0575573,0.058412,0.0588587,0.0583078,0.056491,0.0537587,0.0504445,0.0466722,0.0425747,0.0383287,0.0340574,0.0298202,0.0256705,0.0216922,0.0179859,0.0146378,0.011698,0.00917774,0.00705846,0.00530639,0.00388441,0.00275715,0.00189012,0.00124723,0.000790064,0.000479456,0.00027833,0.000154405,8.18145e-05,4.14101e-05,2.00435e-05,9.30691e-06,4.17785e-06,1.84606e-06,8.3504e-07,4.1498e-07,2.45829e-07,1.77914e-07,1.48846e-07,1.33924e-07,1.23839e-07,1.1526e-07,1.07079e-07,9.89863e-08,9.09467e-08,8.30145e-08,7.52676e-08,6.77837e-08,6.06312e-08,5.38664e-08,4.75325e-08,4.16595e-08,3.62653e-08,3.1356e-08,2.69281e-08,2.29691e-08,1.94598e-08,1.63753e-08,1.36867e-08,1.13622e-08,9.36881e-09}
										 ,{6.54008e-06,2.29383e-05,6.32223e-05,8.55796e-05,0.000122592,0.000164214,0.000191738,0.000353072,0.000965735,0.00215544,0.00484612,0.00986199,0.0165083,0.0240058,0.032166,0.0407818,0.0481844,0.0532395,0.0561219,0.0575573,0.058412,0.0588587,0.0583078,0.056491,0.0537587,0.0504445,0.0466722,0.0425747,0.0383287,0.0340574,0.0298202,0.0256705,0.0216922,0.0179859,0.0146378,0.011698,0.00917774,0.00705846,0.00530639,0.00388441,0.00275715,0.00189012,0.00124723,0.000790064,0.000479456,0.00027833,0.000154405,8.18145e-05,4.14101e-05,2.00435e-05,9.30691e-06,4.17785e-06,1.84606e-06,8.3504e-07,4.1498e-07,2.45829e-07,1.77914e-07,1.48846e-07,1.33924e-07,1.23839e-07,1.1526e-07,1.07079e-07,9.89863e-08,9.09467e-08,8.30145e-08,7.52676e-08,6.77837e-08,6.06312e-08,5.38664e-08,4.75325e-08,4.16595e-08,3.62653e-08,3.1356e-08,2.69281e-08,2.29691e-08,1.94598e-08,1.63753e-08,1.36867e-08,1.13622e-08,9.36881e-09}
										 ,{6.54008e-06,2.29383e-05,6.32223e-05,8.55796e-05,0.000122592,0.000164214,0.000191738,0.000353072,0.000965735,0.00215544,0.00484612,0.00986199,0.0165083,0.0240058,0.032166,0.0407818,0.0481844,0.0532395,0.0561219,0.0575573,0.058412,0.0588587,0.0583078,0.056491,0.0537587,0.0504445,0.0466722,0.0425747,0.0383287,0.0340574,0.0298202,0.0256705,0.0216922,0.0179859,0.0146378,0.011698,0.00917774,0.00705846,0.00530639,0.00388441,0.00275715,0.00189012,0.00124723,0.000790064,0.000479456,0.00027833,0.000154405,8.18145e-05,4.14101e-05,2.00435e-05,9.30691e-06,4.17785e-06,1.84606e-06,8.3504e-07,4.1498e-07,2.45829e-07,1.77914e-07,1.48846e-07,1.33924e-07,1.23839e-07,1.1526e-07,1.07079e-07,9.89863e-08,9.09467e-08,8.30145e-08,7.52676e-08,6.77837e-08,6.06312e-08,5.38664e-08,4.75325e-08,4.16595e-08,3.62653e-08,3.1356e-08,2.69281e-08,2.29691e-08,1.94598e-08,1.63753e-08,1.36867e-08,1.13622e-08,9.36881e-09}
										 ,{6.54008e-06,2.29383e-05,6.32223e-05,8.55796e-05,0.000122592,0.000164214,0.000191738,0.000353072,0.000965735,0.00215544,0.00484612,0.00986199,0.0165083,0.0240058,0.032166,0.0407818,0.0481844,0.0532395,0.0561219,0.0575573,0.058412,0.0588587,0.0583078,0.056491,0.0537587,0.0504445,0.0466722,0.0425747,0.0383287,0.0340574,0.0298202,0.0256705,0.0216922,0.0179859,0.0146378,0.011698,0.00917774,0.00705846,0.00530639,0.00388441,0.00275715,0.00189012,0.00124723,0.000790064,0.000479456,0.00027833,0.000154405,8.18145e-05,4.14101e-05,2.00435e-05,9.30691e-06,4.17785e-06,1.84606e-06,8.3504e-07,4.1498e-07,2.45829e-07,1.77914e-07,1.48846e-07,1.33924e-07,1.23839e-07,1.1526e-07,1.07079e-07,9.89863e-08,9.09467e-08,8.30145e-08,7.52676e-08,6.77837e-08,6.06312e-08,5.38664e-08,4.75325e-08,4.16595e-08,3.62653e-08,3.1356e-08,2.69281e-08,2.29691e-08,1.94598e-08,1.63753e-08,1.36867e-08,1.13622e-08,9.36881e-09}
										 ,{6.54008e-06,2.29383e-05,6.32223e-05,8.55796e-05,0.000122592,0.000164214,0.000191738,0.000353072,0.000965735,0.00215544,0.00484612,0.00986199,0.0165083,0.0240058,0.032166,0.0407818,0.0481844,0.0532395,0.0561219,0.0575573,0.058412,0.0588587,0.0583078,0.056491,0.0537587,0.0504445,0.0466722,0.0425747,0.0383287,0.0340574,0.0298202,0.0256705,0.0216922,0.0179859,0.0146378,0.011698,0.00917774,0.00705846,0.00530639,0.00388441,0.00275715,0.00189012,0.00124723,0.000790064,0.000479456,0.00027833,0.000154405,8.18145e-05,4.14101e-05,2.00435e-05,9.30691e-06,4.17785e-06,1.84606e-06,8.3504e-07,4.1498e-07,2.45829e-07,1.77914e-07,1.48846e-07,1.33924e-07,1.23839e-07,1.1526e-07,1.07079e-07,9.89863e-08,9.09467e-08,8.30145e-08,7.52676e-08,6.77837e-08,6.06312e-08,5.38664e-08,4.75325e-08,4.16595e-08,3.62653e-08,3.1356e-08,2.69281e-08,2.29691e-08,1.94598e-08,1.63753e-08,1.36867e-08,1.13622e-08,9.36881e-09}
										 ,{6.54008e-06,2.29383e-05,6.32223e-05,8.55796e-05,0.000122592,0.000164214,0.000191738,0.000353072,0.000965735,0.00215544,0.00484612,0.00986199,0.0165083,0.0240058,0.032166,0.0407818,0.0481844,0.0532395,0.0561219,0.0575573,0.058412,0.0588587,0.0583078,0.056491,0.0537587,0.0504445,0.0466722,0.0425747,0.0383287,0.0340574,0.0298202,0.0256705,0.0216922,0.0179859,0.0146378,0.011698,0.00917774,0.00705846,0.00530639,0.00388441,0.00275715,0.00189012,0.00124723,0.000790064,0.000479456,0.00027833,0.000154405,8.18145e-05,4.14101e-05,2.00435e-05,9.30691e-06,4.17785e-06,1.84606e-06,8.3504e-07,4.1498e-07,2.45829e-07,1.77914e-07,1.48846e-07,1.33924e-07,1.23839e-07,1.1526e-07,1.07079e-07,9.89863e-08,9.09467e-08,8.30145e-08,7.52676e-08,6.77837e-08,6.06312e-08,5.38664e-08,4.75325e-08,4.16595e-08,3.62653e-08,3.1356e-08,2.69281e-08,2.29691e-08,1.94598e-08,1.63753e-08,1.36867e-08,1.13622e-08,9.36881e-09} 
										 }; //for 2016 data 80 bins
	/*
double datpileup[nHLTmx][npileupmx] = {{1.60632e-06,2.19544e-05,4.80216e-05,7.7327e-05,0.000103355,0.000141667,0.000139785,0.000156029,0.000190349,0.000403612,0.00170533,0.00646473,0.0142993,0.0221684,0.0282229,0.034754,0.0410107,0.0450835,0.0467224,0.0473963,0.0488002,0.051365,0.0540878,0.0559848,0.0567402,0.0563794,0.0550942,0.0530506,0.0501829,0.0463019,0.0413453,0.0355075,0.0292169,0.0230022,0.0173355,0.0125276,0.00870081,0.00582202,0.00376218,0.00235301,0.00142737,0.000841501,0.000483025,0.000270322,0.000147601,7.86226e-05,4.08194e-05,2.06252e-05,1.01236e-05,4.81766e-06,2.21875e-06,9.8739e-07,4.24111e-07,1.75696e-07,7.01769e-08,2.7026e-08,1.00382e-08,3.59769e-09,1.24489e-09,4.16113e-10,1.34419e-10,4.19762e-11,1.26726e-11,3.69814e-12,1.04281e-12,2.83992e-13,7.46483e-14,1.89255e-14,4.62474e-15,1.08856e-15,2.46645e-16,5.37632e-17,1.12758e-17,2.26918e-18,4.29189e-19,8.22786e-20,1.59247e-20,0,0,0},
										{1.60632e-06,2.19544e-05,4.80216e-05,7.7327e-05,0.000103355,0.000141667,0.000139785,0.000156029,0.000190349,0.000403612,0.00170533,0.00646473,0.0142993,0.0221684,0.0282229,0.034754,0.0410107,0.0450835,0.0467224,0.0473963,0.0488002,0.051365,0.0540878,0.0559848,0.0567402,0.0563794,0.0550942,0.0530506,0.0501829,0.0463019,0.0413453,0.0355075,0.0292169,0.0230022,0.0173355,0.0125276,0.00870081,0.00582202,0.00376218,0.00235301,0.00142737,0.000841501,0.000483025,0.000270322,0.000147601,7.86226e-05,4.08194e-05,2.06252e-05,1.01236e-05,4.81766e-06,2.21875e-06,9.8739e-07,4.24111e-07,1.75696e-07,7.01769e-08,2.7026e-08,1.00382e-08,3.59769e-09,1.24489e-09,4.16113e-10,1.34419e-10,4.19762e-11,1.26726e-11,3.69814e-12,1.04281e-12,2.83992e-13,7.46483e-14,1.89255e-14,4.62474e-15,1.08856e-15,2.46645e-16,5.37632e-17,1.12758e-17,2.26918e-18,4.29189e-19,8.22786e-20,1.59247e-20,0,0,0},
										{1.60632e-06,2.19544e-05,4.80216e-05,7.7327e-05,0.000103355,0.000141667,0.000139785,0.000156029,0.000190349,0.000403612,0.00170533,0.00646473,0.0142993,0.0221684,0.0282229,0.034754,0.0410107,0.0450835,0.0467224,0.0473963,0.0488002,0.051365,0.0540878,0.0559848,0.0567402,0.0563794,0.0550942,0.0530506,0.0501829,0.0463019,0.0413453,0.0355075,0.0292169,0.0230022,0.0173355,0.0125276,0.00870081,0.00582202,0.00376218,0.00235301,0.00142737,0.000841501,0.000483025,0.000270322,0.000147601,7.86226e-05,4.08194e-05,2.06252e-05,1.01236e-05,4.81766e-06,2.21875e-06,9.8739e-07,4.24111e-07,1.75696e-07,7.01769e-08,2.7026e-08,1.00382e-08,3.59769e-09,1.24489e-09,4.16113e-10,1.34419e-10,4.19762e-11,1.26726e-11,3.69814e-12,1.04281e-12,2.83992e-13,7.46483e-14,1.89255e-14,4.62474e-15,1.08856e-15,2.46645e-16,5.37632e-17,1.12758e-17,2.26918e-18,4.29189e-19,8.22786e-20,1.59247e-20,0,0,0},
										{1.60632e-06,2.19544e-05,4.80216e-05,7.7327e-05,0.000103355,0.000141667,0.000139785,0.000156029,0.000190349,0.000403612,0.00170533,0.00646473,0.0142993,0.0221684,0.0282229,0.034754,0.0410107,0.0450835,0.0467224,0.0473963,0.0488002,0.051365,0.0540878,0.0559848,0.0567402,0.0563794,0.0550942,0.0530506,0.0501829,0.0463019,0.0413453,0.0355075,0.0292169,0.0230022,0.0173355,0.0125276,0.00870081,0.00582202,0.00376218,0.00235301,0.00142737,0.000841501,0.000483025,0.000270322,0.000147601,7.86226e-05,4.08194e-05,2.06252e-05,1.01236e-05,4.81766e-06,2.21875e-06,9.8739e-07,4.24111e-07,1.75696e-07,7.01769e-08,2.7026e-08,1.00382e-08,3.59769e-09,1.24489e-09,4.16113e-10,1.34419e-10,4.19762e-11,1.26726e-11,3.69814e-12,1.04281e-12,2.83992e-13,7.46483e-14,1.89255e-14,4.62474e-15,1.08856e-15,2.46645e-16,5.37632e-17,1.12758e-17,2.26918e-18,4.29189e-19,8.22786e-20,1.59247e-20,0,0,0},
										{1.60632e-06,2.19544e-05,4.80216e-05,7.7327e-05,0.000103355,0.000141667,0.000139785,0.000156029,0.000190349,0.000403612,0.00170533,0.00646473,0.0142993,0.0221684,0.0282229,0.034754,0.0410107,0.0450835,0.0467224,0.0473963,0.0488002,0.051365,0.0540878,0.0559848,0.0567402,0.0563794,0.0550942,0.0530506,0.0501829,0.0463019,0.0413453,0.0355075,0.0292169,0.0230022,0.0173355,0.0125276,0.00870081,0.00582202,0.00376218,0.00235301,0.00142737,0.000841501,0.000483025,0.000270322,0.000147601,7.86226e-05,4.08194e-05,2.06252e-05,1.01236e-05,4.81766e-06,2.21875e-06,9.8739e-07,4.24111e-07,1.75696e-07,7.01769e-08,2.7026e-08,1.00382e-08,3.59769e-09,1.24489e-09,4.16113e-10,1.34419e-10,4.19762e-11,1.26726e-11,3.69814e-12,1.04281e-12,2.83992e-13,7.46483e-14,1.89255e-14,4.62474e-15,1.08856e-15,2.46645e-16,5.37632e-17,1.12758e-17,2.26918e-18,4.29189e-19,8.22786e-20,1.59247e-20,0,0,0},
										{1.60632e-06,2.19544e-05,4.80216e-05,7.7327e-05,0.000103355,0.000141667,0.000139785,0.000156029,0.000190349,0.000403612,0.00170533,0.00646473,0.0142993,0.0221684,0.0282229,0.034754,0.0410107,0.0450835,0.0467224,0.0473963,0.0488002,0.051365,0.0540878,0.0559848,0.0567402,0.0563794,0.0550942,0.0530506,0.0501829,0.0463019,0.0413453,0.0355075,0.0292169,0.0230022,0.0173355,0.0125276,0.00870081,0.00582202,0.00376218,0.00235301,0.00142737,0.000841501,0.000483025,0.000270322,0.000147601,7.86226e-05,4.08194e-05,2.06252e-05,1.01236e-05,4.81766e-06,2.21875e-06,9.8739e-07,4.24111e-07,1.75696e-07,7.01769e-08,2.7026e-08,1.00382e-08,3.59769e-09,1.24489e-09,4.16113e-10,1.34419e-10,4.19762e-11,1.26726e-11,3.69814e-12,1.04281e-12,2.83992e-13,7.46483e-14,1.89255e-14,4.62474e-15,1.08856e-15,2.46645e-16,5.37632e-17,1.12758e-17,2.26918e-18,4.29189e-19,8.22786e-20,1.59247e-20,0,0,0},
										{1.60632e-06,2.19544e-05,4.80216e-05,7.7327e-05,0.000103355,0.000141667,0.000139785,0.000156029,0.000190349,0.000403612,0.00170533,0.00646473,0.0142993,0.0221684,0.0282229,0.034754,0.0410107,0.0450835,0.0467224,0.0473963,0.0488002,0.051365,0.0540878,0.0559848,0.0567402,0.0563794,0.0550942,0.0530506,0.0501829,0.0463019,0.0413453,0.0355075,0.0292169,0.0230022,0.0173355,0.0125276,0.00870081,0.00582202,0.00376218,0.00235301,0.00142737,0.000841501,0.000483025,0.000270322,0.000147601,7.86226e-05,4.08194e-05,2.06252e-05,1.01236e-05,4.81766e-06,2.21875e-06,9.8739e-07,4.24111e-07,1.75696e-07,7.01769e-08,2.7026e-08,1.00382e-08,3.59769e-09,1.24489e-09,4.16113e-10,1.34419e-10,4.19762e-11,1.26726e-11,3.69814e-12,1.04281e-12,2.83992e-13,7.46483e-14,1.89255e-14,4.62474e-15,1.08856e-15,2.46645e-16,5.37632e-17,1.12758e-17,2.26918e-18,4.29189e-19,8.22786e-20,1.59247e-20,0,0,0},
										{1.60632e-06,2.19544e-05,4.80216e-05,7.7327e-05,0.000103355,0.000141667,0.000139785,0.000156029,0.000190349,0.000403612,0.00170533,0.00646473,0.0142993,0.0221684,0.0282229,0.034754,0.0410107,0.0450835,0.0467224,0.0473963,0.0488002,0.051365,0.0540878,0.0559848,0.0567402,0.0563794,0.0550942,0.0530506,0.0501829,0.0463019,0.0413453,0.0355075,0.0292169,0.0230022,0.0173355,0.0125276,0.00870081,0.00582202,0.00376218,0.00235301,0.00142737,0.000841501,0.000483025,0.000270322,0.000147601,7.86226e-05,4.08194e-05,2.06252e-05,1.01236e-05,4.81766e-06,2.21875e-06,9.8739e-07,4.24111e-07,1.75696e-07,7.01769e-08,2.7026e-08,1.00382e-08,3.59769e-09,1.24489e-09,4.16113e-10,1.34419e-10,4.19762e-11,1.26726e-11,3.69814e-12,1.04281e-12,2.83992e-13,7.46483e-14,1.89255e-14,4.62474e-15,1.08856e-15,2.46645e-16,5.37632e-17,1.12758e-17,2.26918e-18,4.29189e-19,8.22786e-20,1.59247e-20,0,0,0},
										{1.60632e-06,2.19544e-05,4.80216e-05,7.7327e-05,0.000103355,0.000141667,0.000139785,0.000156029,0.000190349,0.000403612,0.00170533,0.00646473,0.0142993,0.0221684,0.0282229,0.034754,0.0410107,0.0450835,0.0467224,0.0473963,0.0488002,0.051365,0.0540878,0.0559848,0.0567402,0.0563794,0.0550942,0.0530506,0.0501829,0.0463019,0.0413453,0.0355075,0.0292169,0.0230022,0.0173355,0.0125276,0.00870081,0.00582202,0.00376218,0.00235301,0.00142737,0.000841501,0.000483025,0.000270322,0.000147601,7.86226e-05,4.08194e-05,2.06252e-05,1.01236e-05,4.81766e-06,2.21875e-06,9.8739e-07,4.24111e-07,1.75696e-07,7.01769e-08,2.7026e-08,1.00382e-08,3.59769e-09,1.24489e-09,4.16113e-10,1.34419e-10,4.19762e-11,1.26726e-11,3.69814e-12,1.04281e-12,2.83992e-13,7.46483e-14,1.89255e-14,4.62474e-15,1.08856e-15,2.46645e-16,5.37632e-17,1.12758e-17,2.26918e-18,4.29189e-19,8.22786e-20,1.59247e-20,0,0,0},
										{1.60632e-06,2.19544e-05,4.80216e-05,7.7327e-05,0.000103355,0.000141667,0.000139785,0.000156029,0.000190349,0.000403612,0.00170533,0.00646473,0.0142993,0.0221684,0.0282229,0.034754,0.0410107,0.0450835,0.0467224,0.0473963,0.0488002,0.051365,0.0540878,0.0559848,0.0567402,0.0563794,0.0550942,0.0530506,0.0501829,0.0463019,0.0413453,0.0355075,0.0292169,0.0230022,0.0173355,0.0125276,0.00870081,0.00582202,0.00376218,0.00235301,0.00142737,0.000841501,0.000483025,0.000270322,0.000147601,7.86226e-05,4.08194e-05,2.06252e-05,1.01236e-05,4.81766e-06,2.21875e-06,9.8739e-07,4.24111e-07,1.75696e-07,7.01769e-08,2.7026e-08,1.00382e-08,3.59769e-09,1.24489e-09,4.16113e-10,1.34419e-10,4.19762e-11,1.26726e-11,3.69814e-12,1.04281e-12,2.83992e-13,7.46483e-14,1.89255e-14,4.62474e-15,1.08856e-15,2.46645e-16,5.37632e-17,1.12758e-17,2.26918e-18,4.29189e-19,8.22786e-20,1.59247e-20,0,0,0}};
*/
double datpileup_up[nHLTmx][npileupmx] = {{1.04057e-06,1.46187e-05,3.60868e-05,5.56064e-05,8.19628e-05,0.000101728,0.000129048,0.000122608,0.000138187,0.00015915,0.000281514,0.000835432,0.00328878,0.00835496,0.0148967,0.020643,0.0252649,0.0303825,0.0353988,0.0390475,0.0408764,0.0415375,0.0421544,0.0435579,0.0456755,0.047785,0.0493057,0.0500428,0.0499921,0.0492517,0.0479558,0.0461443,0.0437269,0.0405894,0.03671,0.0322102,0.027342,0.0224256,0.0177714,0.0136189,0.0101068,0.00727533,0.00508858,0.00346378,0.00229816,0.0014884,0.000942272,0.000583892,0.00035455,0.000211132,0.000123342,7.06758e-05,3.96973e-05,2.18345e-05,1.17455e-05,6.17115e-06,3.16266e-06,1.57915e-06,7.67457e-07,3.62768e-07,1.66703e-07,7.44549e-08,3.23204e-08,1.36384e-08,5.59607e-09,2.23355e-09,8.67503e-10,3.27997e-10,1.20759e-10,4.33011e-11,1.51229e-11,5.14389e-12,1.70366e-12,5.49253e-13,1.72302e-13,5.25701e-14,1.55924e-14,4.49371e-15,1.2578e-15,3.41786e-16},
										{1.04057e-06,1.46187e-05,3.60868e-05,5.56064e-05,8.19628e-05,0.000101728,0.000129048,0.000122608,0.000138187,0.00015915,0.000281514,0.000835432,0.00328878,0.00835496,0.0148967,0.020643,0.0252649,0.0303825,0.0353988,0.0390475,0.0408764,0.0415375,0.0421544,0.0435579,0.0456755,0.047785,0.0493057,0.0500428,0.0499921,0.0492517,0.0479558,0.0461443,0.0437269,0.0405894,0.03671,0.0322102,0.027342,0.0224256,0.0177714,0.0136189,0.0101068,0.00727533,0.00508858,0.00346378,0.00229816,0.0014884,0.000942272,0.000583892,0.00035455,0.000211132,0.000123342,7.06758e-05,3.96973e-05,2.18345e-05,1.17455e-05,6.17115e-06,3.16266e-06,1.57915e-06,7.67457e-07,3.62768e-07,1.66703e-07,7.44549e-08,3.23204e-08,1.36384e-08,5.59607e-09,2.23355e-09,8.67503e-10,3.27997e-10,1.20759e-10,4.33011e-11,1.51229e-11,5.14389e-12,1.70366e-12,5.49253e-13,1.72302e-13,5.25701e-14,1.55924e-14,4.49371e-15,1.2578e-15,3.41786e-16},
										{1.04057e-06,1.46187e-05,3.60868e-05,5.56064e-05,8.19628e-05,0.000101728,0.000129048,0.000122608,0.000138187,0.00015915,0.000281514,0.000835432,0.00328878,0.00835496,0.0148967,0.020643,0.0252649,0.0303825,0.0353988,0.0390475,0.0408764,0.0415375,0.0421544,0.0435579,0.0456755,0.047785,0.0493057,0.0500428,0.0499921,0.0492517,0.0479558,0.0461443,0.0437269,0.0405894,0.03671,0.0322102,0.027342,0.0224256,0.0177714,0.0136189,0.0101068,0.00727533,0.00508858,0.00346378,0.00229816,0.0014884,0.000942272,0.000583892,0.00035455,0.000211132,0.000123342,7.06758e-05,3.96973e-05,2.18345e-05,1.17455e-05,6.17115e-06,3.16266e-06,1.57915e-06,7.67457e-07,3.62768e-07,1.66703e-07,7.44549e-08,3.23204e-08,1.36384e-08,5.59607e-09,2.23355e-09,8.67503e-10,3.27997e-10,1.20759e-10,4.33011e-11,1.51229e-11,5.14389e-12,1.70366e-12,5.49253e-13,1.72302e-13,5.25701e-14,1.55924e-14,4.49371e-15,1.2578e-15,3.41786e-16},
										{1.04057e-06,1.46187e-05,3.60868e-05,5.56064e-05,8.19628e-05,0.000101728,0.000129048,0.000122608,0.000138187,0.00015915,0.000281514,0.000835432,0.00328878,0.00835496,0.0148967,0.020643,0.0252649,0.0303825,0.0353988,0.0390475,0.0408764,0.0415375,0.0421544,0.0435579,0.0456755,0.047785,0.0493057,0.0500428,0.0499921,0.0492517,0.0479558,0.0461443,0.0437269,0.0405894,0.03671,0.0322102,0.027342,0.0224256,0.0177714,0.0136189,0.0101068,0.00727533,0.00508858,0.00346378,0.00229816,0.0014884,0.000942272,0.000583892,0.00035455,0.000211132,0.000123342,7.06758e-05,3.96973e-05,2.18345e-05,1.17455e-05,6.17115e-06,3.16266e-06,1.57915e-06,7.67457e-07,3.62768e-07,1.66703e-07,7.44549e-08,3.23204e-08,1.36384e-08,5.59607e-09,2.23355e-09,8.67503e-10,3.27997e-10,1.20759e-10,4.33011e-11,1.51229e-11,5.14389e-12,1.70366e-12,5.49253e-13,1.72302e-13,5.25701e-14,1.55924e-14,4.49371e-15,1.2578e-15,3.41786e-16},
										{1.04057e-06,1.46187e-05,3.60868e-05,5.56064e-05,8.19628e-05,0.000101728,0.000129048,0.000122608,0.000138187,0.00015915,0.000281514,0.000835432,0.00328878,0.00835496,0.0148967,0.020643,0.0252649,0.0303825,0.0353988,0.0390475,0.0408764,0.0415375,0.0421544,0.0435579,0.0456755,0.047785,0.0493057,0.0500428,0.0499921,0.0492517,0.0479558,0.0461443,0.0437269,0.0405894,0.03671,0.0322102,0.027342,0.0224256,0.0177714,0.0136189,0.0101068,0.00727533,0.00508858,0.00346378,0.00229816,0.0014884,0.000942272,0.000583892,0.00035455,0.000211132,0.000123342,7.06758e-05,3.96973e-05,2.18345e-05,1.17455e-05,6.17115e-06,3.16266e-06,1.57915e-06,7.67457e-07,3.62768e-07,1.66703e-07,7.44549e-08,3.23204e-08,1.36384e-08,5.59607e-09,2.23355e-09,8.67503e-10,3.27997e-10,1.20759e-10,4.33011e-11,1.51229e-11,5.14389e-12,1.70366e-12,5.49253e-13,1.72302e-13,5.25701e-14,1.55924e-14,4.49371e-15,1.2578e-15,3.41786e-16},
										{1.04057e-06,1.46187e-05,3.60868e-05,5.56064e-05,8.19628e-05,0.000101728,0.000129048,0.000122608,0.000138187,0.00015915,0.000281514,0.000835432,0.00328878,0.00835496,0.0148967,0.020643,0.0252649,0.0303825,0.0353988,0.0390475,0.0408764,0.0415375,0.0421544,0.0435579,0.0456755,0.047785,0.0493057,0.0500428,0.0499921,0.0492517,0.0479558,0.0461443,0.0437269,0.0405894,0.03671,0.0322102,0.027342,0.0224256,0.0177714,0.0136189,0.0101068,0.00727533,0.00508858,0.00346378,0.00229816,0.0014884,0.000942272,0.000583892,0.00035455,0.000211132,0.000123342,7.06758e-05,3.96973e-05,2.18345e-05,1.17455e-05,6.17115e-06,3.16266e-06,1.57915e-06,7.67457e-07,3.62768e-07,1.66703e-07,7.44549e-08,3.23204e-08,1.36384e-08,5.59607e-09,2.23355e-09,8.67503e-10,3.27997e-10,1.20759e-10,4.33011e-11,1.51229e-11,5.14389e-12,1.70366e-12,5.49253e-13,1.72302e-13,5.25701e-14,1.55924e-14,4.49371e-15,1.2578e-15,3.41786e-16},
										{1.04057e-06,1.46187e-05,3.60868e-05,5.56064e-05,8.19628e-05,0.000101728,0.000129048,0.000122608,0.000138187,0.00015915,0.000281514,0.000835432,0.00328878,0.00835496,0.0148967,0.020643,0.0252649,0.0303825,0.0353988,0.0390475,0.0408764,0.0415375,0.0421544,0.0435579,0.0456755,0.047785,0.0493057,0.0500428,0.0499921,0.0492517,0.0479558,0.0461443,0.0437269,0.0405894,0.03671,0.0322102,0.027342,0.0224256,0.0177714,0.0136189,0.0101068,0.00727533,0.00508858,0.00346378,0.00229816,0.0014884,0.000942272,0.000583892,0.00035455,0.000211132,0.000123342,7.06758e-05,3.96973e-05,2.18345e-05,1.17455e-05,6.17115e-06,3.16266e-06,1.57915e-06,7.67457e-07,3.62768e-07,1.66703e-07,7.44549e-08,3.23204e-08,1.36384e-08,5.59607e-09,2.23355e-09,8.67503e-10,3.27997e-10,1.20759e-10,4.33011e-11,1.51229e-11,5.14389e-12,1.70366e-12,5.49253e-13,1.72302e-13,5.25701e-14,1.55924e-14,4.49371e-15,1.2578e-15,3.41786e-16},
										{1.04057e-06,1.46187e-05,3.60868e-05,5.56064e-05,8.19628e-05,0.000101728,0.000129048,0.000122608,0.000138187,0.00015915,0.000281514,0.000835432,0.00328878,0.00835496,0.0148967,0.020643,0.0252649,0.0303825,0.0353988,0.0390475,0.0408764,0.0415375,0.0421544,0.0435579,0.0456755,0.047785,0.0493057,0.0500428,0.0499921,0.0492517,0.0479558,0.0461443,0.0437269,0.0405894,0.03671,0.0322102,0.027342,0.0224256,0.0177714,0.0136189,0.0101068,0.00727533,0.00508858,0.00346378,0.00229816,0.0014884,0.000942272,0.000583892,0.00035455,0.000211132,0.000123342,7.06758e-05,3.96973e-05,2.18345e-05,1.17455e-05,6.17115e-06,3.16266e-06,1.57915e-06,7.67457e-07,3.62768e-07,1.66703e-07,7.44549e-08,3.23204e-08,1.36384e-08,5.59607e-09,2.23355e-09,8.67503e-10,3.27997e-10,1.20759e-10,4.33011e-11,1.51229e-11,5.14389e-12,1.70366e-12,5.49253e-13,1.72302e-13,5.25701e-14,1.55924e-14,4.49371e-15,1.2578e-15,3.41786e-16},
										{1.04057e-06,1.46187e-05,3.60868e-05,5.56064e-05,8.19628e-05,0.000101728,0.000129048,0.000122608,0.000138187,0.00015915,0.000281514,0.000835432,0.00328878,0.00835496,0.0148967,0.020643,0.0252649,0.0303825,0.0353988,0.0390475,0.0408764,0.0415375,0.0421544,0.0435579,0.0456755,0.047785,0.0493057,0.0500428,0.0499921,0.0492517,0.0479558,0.0461443,0.0437269,0.0405894,0.03671,0.0322102,0.027342,0.0224256,0.0177714,0.0136189,0.0101068,0.00727533,0.00508858,0.00346378,0.00229816,0.0014884,0.000942272,0.000583892,0.00035455,0.000211132,0.000123342,7.06758e-05,3.96973e-05,2.18345e-05,1.17455e-05,6.17115e-06,3.16266e-06,1.57915e-06,7.67457e-07,3.62768e-07,1.66703e-07,7.44549e-08,3.23204e-08,1.36384e-08,5.59607e-09,2.23355e-09,8.67503e-10,3.27997e-10,1.20759e-10,4.33011e-11,1.51229e-11,5.14389e-12,1.70366e-12,5.49253e-13,1.72302e-13,5.25701e-14,1.55924e-14,4.49371e-15,1.2578e-15,3.41786e-16},
										{1.04057e-06,1.46187e-05,3.60868e-05,5.56064e-05,8.19628e-05,0.000101728,0.000129048,0.000122608,0.000138187,0.00015915,0.000281514,0.000835432,0.00328878,0.00835496,0.0148967,0.020643,0.0252649,0.0303825,0.0353988,0.0390475,0.0408764,0.0415375,0.0421544,0.0435579,0.0456755,0.047785,0.0493057,0.0500428,0.0499921,0.0492517,0.0479558,0.0461443,0.0437269,0.0405894,0.03671,0.0322102,0.027342,0.0224256,0.0177714,0.0136189,0.0101068,0.00727533,0.00508858,0.00346378,0.00229816,0.0014884,0.000942272,0.000583892,0.00035455,0.000211132,0.000123342,7.06758e-05,3.96973e-05,2.18345e-05,1.17455e-05,6.17115e-06,3.16266e-06,1.57915e-06,7.67457e-07,3.62768e-07,1.66703e-07,7.44549e-08,3.23204e-08,1.36384e-08,5.59607e-09,2.23355e-09,8.67503e-10,3.27997e-10,1.20759e-10,4.33011e-11,1.51229e-11,5.14389e-12,1.70366e-12,5.49253e-13,1.72302e-13,5.25701e-14,1.55924e-14,4.49371e-15,1.2578e-15,3.41786e-16}};
	
double datpileup_dn[nHLTmx][npileupmx] = {{2.03462e-06,2.51997e-05,5.31105e-05,8.79617e-05,0.000115134,0.000152214,0.000148061,0.000170531,0.000254545,0.000765098,0.00381195,0.011083,0.0202155,0.0274211,0.0342951,0.0414792,0.046606,0.0488183,0.049597,0.0510322,0.0538078,0.0567839,0.0587941,0.0594854,0.0589145,0.0573244,0.0548649,0.0513963,0.046713,0.0408417,0.0341409,0.0272029,0.0206502,0.0149558,0.010359,0.00688108,0.00439577,0.00270759,0.00161197,0.000929778,0.000520681,0.000283559,0.000150299,7.75246e-05,3.88713e-05,1.89126e-05,8.90971e-06,4.05511e-06,1.77947e-06,7.51656e-07,3.05274e-07,1.19129e-07,4.46602e-08,1.60873e-08,5.57066e-09,1.8555e-09,5.9488e-10,1.83676e-10,5.46375e-11,1.56605e-11,4.32453e-12,1.15008e-12,2.94387e-13,7.24777e-14,1.71491e-14,3.89661e-15,8.49588e-16,1.77624e-16,3.55872e-17,6.82742e-18,1.24474e-18,2.21459e-19,3.80053e-20,0,0,0,0,0,0,0},
										  {2.03462e-06,2.51997e-05,5.31105e-05,8.79617e-05,0.000115134,0.000152214,0.000148061,0.000170531,0.000254545,0.000765098,0.00381195,0.011083,0.0202155,0.0274211,0.0342951,0.0414792,0.046606,0.0488183,0.049597,0.0510322,0.0538078,0.0567839,0.0587941,0.0594854,0.0589145,0.0573244,0.0548649,0.0513963,0.046713,0.0408417,0.0341409,0.0272029,0.0206502,0.0149558,0.010359,0.00688108,0.00439577,0.00270759,0.00161197,0.000929778,0.000520681,0.000283559,0.000150299,7.75246e-05,3.88713e-05,1.89126e-05,8.90971e-06,4.05511e-06,1.77947e-06,7.51656e-07,3.05274e-07,1.19129e-07,4.46602e-08,1.60873e-08,5.57066e-09,1.8555e-09,5.9488e-10,1.83676e-10,5.46375e-11,1.56605e-11,4.32453e-12,1.15008e-12,2.94387e-13,7.24777e-14,1.71491e-14,3.89661e-15,8.49588e-16,1.77624e-16,3.55872e-17,6.82742e-18,1.24474e-18,2.21459e-19,3.80053e-20,0,0,0,0,0,0,0},
										  {2.03462e-06,2.51997e-05,5.31105e-05,8.79617e-05,0.000115134,0.000152214,0.000148061,0.000170531,0.000254545,0.000765098,0.00381195,0.011083,0.0202155,0.0274211,0.0342951,0.0414792,0.046606,0.0488183,0.049597,0.0510322,0.0538078,0.0567839,0.0587941,0.0594854,0.0589145,0.0573244,0.0548649,0.0513963,0.046713,0.0408417,0.0341409,0.0272029,0.0206502,0.0149558,0.010359,0.00688108,0.00439577,0.00270759,0.00161197,0.000929778,0.000520681,0.000283559,0.000150299,7.75246e-05,3.88713e-05,1.89126e-05,8.90971e-06,4.05511e-06,1.77947e-06,7.51656e-07,3.05274e-07,1.19129e-07,4.46602e-08,1.60873e-08,5.57066e-09,1.8555e-09,5.9488e-10,1.83676e-10,5.46375e-11,1.56605e-11,4.32453e-12,1.15008e-12,2.94387e-13,7.24777e-14,1.71491e-14,3.89661e-15,8.49588e-16,1.77624e-16,3.55872e-17,6.82742e-18,1.24474e-18,2.21459e-19,3.80053e-20,0,0,0,0,0,0,0},
										  {2.03462e-06,2.51997e-05,5.31105e-05,8.79617e-05,0.000115134,0.000152214,0.000148061,0.000170531,0.000254545,0.000765098,0.00381195,0.011083,0.0202155,0.0274211,0.0342951,0.0414792,0.046606,0.0488183,0.049597,0.0510322,0.0538078,0.0567839,0.0587941,0.0594854,0.0589145,0.0573244,0.0548649,0.0513963,0.046713,0.0408417,0.0341409,0.0272029,0.0206502,0.0149558,0.010359,0.00688108,0.00439577,0.00270759,0.00161197,0.000929778,0.000520681,0.000283559,0.000150299,7.75246e-05,3.88713e-05,1.89126e-05,8.90971e-06,4.05511e-06,1.77947e-06,7.51656e-07,3.05274e-07,1.19129e-07,4.46602e-08,1.60873e-08,5.57066e-09,1.8555e-09,5.9488e-10,1.83676e-10,5.46375e-11,1.56605e-11,4.32453e-12,1.15008e-12,2.94387e-13,7.24777e-14,1.71491e-14,3.89661e-15,8.49588e-16,1.77624e-16,3.55872e-17,6.82742e-18,1.24474e-18,2.21459e-19,3.80053e-20,0,0,0,0,0,0,0},
										  {2.03462e-06,2.51997e-05,5.31105e-05,8.79617e-05,0.000115134,0.000152214,0.000148061,0.000170531,0.000254545,0.000765098,0.00381195,0.011083,0.0202155,0.0274211,0.0342951,0.0414792,0.046606,0.0488183,0.049597,0.0510322,0.0538078,0.0567839,0.0587941,0.0594854,0.0589145,0.0573244,0.0548649,0.0513963,0.046713,0.0408417,0.0341409,0.0272029,0.0206502,0.0149558,0.010359,0.00688108,0.00439577,0.00270759,0.00161197,0.000929778,0.000520681,0.000283559,0.000150299,7.75246e-05,3.88713e-05,1.89126e-05,8.90971e-06,4.05511e-06,1.77947e-06,7.51656e-07,3.05274e-07,1.19129e-07,4.46602e-08,1.60873e-08,5.57066e-09,1.8555e-09,5.9488e-10,1.83676e-10,5.46375e-11,1.56605e-11,4.32453e-12,1.15008e-12,2.94387e-13,7.24777e-14,1.71491e-14,3.89661e-15,8.49588e-16,1.77624e-16,3.55872e-17,6.82742e-18,1.24474e-18,2.21459e-19,3.80053e-20,0,0,0,0,0,0,0},
										  {2.03462e-06,2.51997e-05,5.31105e-05,8.79617e-05,0.000115134,0.000152214,0.000148061,0.000170531,0.000254545,0.000765098,0.00381195,0.011083,0.0202155,0.0274211,0.0342951,0.0414792,0.046606,0.0488183,0.049597,0.0510322,0.0538078,0.0567839,0.0587941,0.0594854,0.0589145,0.0573244,0.0548649,0.0513963,0.046713,0.0408417,0.0341409,0.0272029,0.0206502,0.0149558,0.010359,0.00688108,0.00439577,0.00270759,0.00161197,0.000929778,0.000520681,0.000283559,0.000150299,7.75246e-05,3.88713e-05,1.89126e-05,8.90971e-06,4.05511e-06,1.77947e-06,7.51656e-07,3.05274e-07,1.19129e-07,4.46602e-08,1.60873e-08,5.57066e-09,1.8555e-09,5.9488e-10,1.83676e-10,5.46375e-11,1.56605e-11,4.32453e-12,1.15008e-12,2.94387e-13,7.24777e-14,1.71491e-14,3.89661e-15,8.49588e-16,1.77624e-16,3.55872e-17,6.82742e-18,1.24474e-18,2.21459e-19,3.80053e-20,0,0,0,0,0,0,0},
										  {2.03462e-06,2.51997e-05,5.31105e-05,8.79617e-05,0.000115134,0.000152214,0.000148061,0.000170531,0.000254545,0.000765098,0.00381195,0.011083,0.0202155,0.0274211,0.0342951,0.0414792,0.046606,0.0488183,0.049597,0.0510322,0.0538078,0.0567839,0.0587941,0.0594854,0.0589145,0.0573244,0.0548649,0.0513963,0.046713,0.0408417,0.0341409,0.0272029,0.0206502,0.0149558,0.010359,0.00688108,0.00439577,0.00270759,0.00161197,0.000929778,0.000520681,0.000283559,0.000150299,7.75246e-05,3.88713e-05,1.89126e-05,8.90971e-06,4.05511e-06,1.77947e-06,7.51656e-07,3.05274e-07,1.19129e-07,4.46602e-08,1.60873e-08,5.57066e-09,1.8555e-09,5.9488e-10,1.83676e-10,5.46375e-11,1.56605e-11,4.32453e-12,1.15008e-12,2.94387e-13,7.24777e-14,1.71491e-14,3.89661e-15,8.49588e-16,1.77624e-16,3.55872e-17,6.82742e-18,1.24474e-18,2.21459e-19,3.80053e-20,0,0,0,0,0,0,0},
										  {2.03462e-06,2.51997e-05,5.31105e-05,8.79617e-05,0.000115134,0.000152214,0.000148061,0.000170531,0.000254545,0.000765098,0.00381195,0.011083,0.0202155,0.0274211,0.0342951,0.0414792,0.046606,0.0488183,0.049597,0.0510322,0.0538078,0.0567839,0.0587941,0.0594854,0.0589145,0.0573244,0.0548649,0.0513963,0.046713,0.0408417,0.0341409,0.0272029,0.0206502,0.0149558,0.010359,0.00688108,0.00439577,0.00270759,0.00161197,0.000929778,0.000520681,0.000283559,0.000150299,7.75246e-05,3.88713e-05,1.89126e-05,8.90971e-06,4.05511e-06,1.77947e-06,7.51656e-07,3.05274e-07,1.19129e-07,4.46602e-08,1.60873e-08,5.57066e-09,1.8555e-09,5.9488e-10,1.83676e-10,5.46375e-11,1.56605e-11,4.32453e-12,1.15008e-12,2.94387e-13,7.24777e-14,1.71491e-14,3.89661e-15,8.49588e-16,1.77624e-16,3.55872e-17,6.82742e-18,1.24474e-18,2.21459e-19,3.80053e-20,0,0,0,0,0,0,0},
										  {2.03462e-06,2.51997e-05,5.31105e-05,8.79617e-05,0.000115134,0.000152214,0.000148061,0.000170531,0.000254545,0.000765098,0.00381195,0.011083,0.0202155,0.0274211,0.0342951,0.0414792,0.046606,0.0488183,0.049597,0.0510322,0.0538078,0.0567839,0.0587941,0.0594854,0.0589145,0.0573244,0.0548649,0.0513963,0.046713,0.0408417,0.0341409,0.0272029,0.0206502,0.0149558,0.010359,0.00688108,0.00439577,0.00270759,0.00161197,0.000929778,0.000520681,0.000283559,0.000150299,7.75246e-05,3.88713e-05,1.89126e-05,8.90971e-06,4.05511e-06,1.77947e-06,7.51656e-07,3.05274e-07,1.19129e-07,4.46602e-08,1.60873e-08,5.57066e-09,1.8555e-09,5.9488e-10,1.83676e-10,5.46375e-11,1.56605e-11,4.32453e-12,1.15008e-12,2.94387e-13,7.24777e-14,1.71491e-14,3.89661e-15,8.49588e-16,1.77624e-16,3.55872e-17,6.82742e-18,1.24474e-18,2.21459e-19,3.80053e-20,0,0,0,0,0,0,0},
										  {2.03462e-06,2.51997e-05,5.31105e-05,8.79617e-05,0.000115134,0.000152214,0.000148061,0.000170531,0.000254545,0.000765098,0.00381195,0.011083,0.0202155,0.0274211,0.0342951,0.0414792,0.046606,0.0488183,0.049597,0.0510322,0.0538078,0.0567839,0.0587941,0.0594854,0.0589145,0.0573244,0.0548649,0.0513963,0.046713,0.0408417,0.0341409,0.0272029,0.0206502,0.0149558,0.010359,0.00688108,0.00439577,0.00270759,0.00161197,0.000929778,0.000520681,0.000283559,0.000150299,7.75246e-05,3.88713e-05,1.89126e-05,8.90971e-06,4.05511e-06,1.77947e-06,7.51656e-07,3.05274e-07,1.19129e-07,4.46602e-08,1.60873e-08,5.57066e-09,1.8555e-09,5.9488e-10,1.83676e-10,5.46375e-11,1.56605e-11,4.32453e-12,1.15008e-12,2.94387e-13,7.24777e-14,1.71491e-14,3.89661e-15,8.49588e-16,1.77624e-16,3.55872e-17,6.82742e-18,1.24474e-18,2.21459e-19,3.80053e-20,0,0,0,0,0,0,0}};
			 
										
double  mcpileup[npileupmx] = {2.82595e-05,6.29473e-05,0.000126337,0.000256885,0.000564631,0.00110702,0.00204067,0.0035458,0.00559555,0.0083368,0.011575,0.0154292,0.01967,0.0241571,0.0285471,0.0326206,0.0364776,0.0397328,0.0421873,0.044275,0.0451668,0.0458842,0.045376,0.0445124,0.043152,0.0411647,0.038777,0.0366233,0.033998,0.0314075,0.0287512,0.0262996,0.0239008,0.0215455,0.0195003,0.0176033,0.015793,0.0141663,0.0128473,0.0115051,0.0103265,0.00926773,0.00834596,0.00750304,0.00666546,0.00597047,0.00529105,0.00466223,0.00413244,0.00362811,0.00318285,0.00273657,0.00239027,0.0020306,0.0017336,0.00146106,0.00122478,0.00100438,0.000834986,0.000668676,0.000550739,0.000455454,0.000343681,0.000275465,0.000227473,0.000165593,0.000133594,0.000107893,7.98589e-05,6.69385e-05,5.60126e-05,4.08681e-05,2.92365e-05,2.53712e-05,1.69478e-05,1.57952e-05,1.38265e-05,9.98148e-06,6.90946e-06,6.66382e-06} ; //For 2016 Summer MC

double rat_pileup[nHLTmx][npileupmx] = {{0}};

void PileUpGenerator(double datapileup[nHLTmx][npileupmx], double *mcpileup, double rat_pileup[nHLTmx][npileupmx])
{
    double dattot[nHLTmx]={0};
    double mctot=0;
    for (int ij=0; ij<npileupmx; ij++) {
      for (int jk=0; jk<nHLTmx; jk++) {
	dattot[jk] +=datpileup[jk][ij];
      }
      mctot +=mcpileup[ij];
    }
    cout<<"datatot "<<dattot[0]<<endl;
    
    for (int ij=0; ij<npileupmx; ij++) {
      mcpileup[ij] /=max(1.e-6,mctot);
      for (int jk=0; jk<nHLTmx; jk++) {
	datpileup[jk][ij] /=max(1.e-6,dattot[jk]);

#ifdef PU_UP
	rat_pileup[jk][ij] =  datpileup_up[jk][ij]*1./mcpileup[ij];
#elif defined(PU_DN)  
	rat_pileup[jk][ij] =  datpileup_dn[jk][ij]*1./mcpileup[ij];
#else
    rat_pileup[jk][ij] =  datpileup[jk][ij]*1./mcpileup[ij];
#endif
    
	if(jk==0) { cout<<ij<<" ratio "<<rat_pileup[jk][ij]<<endl;}
    
		}
    }
///prescale///
/*
for(int ij=0; ij<nHLTmx; ij++){
          compres[ij] = compresG[ij];
        }
*/
}

int* dec2bin(int dec)
{
const int length = nHLTmx;
int input = dec;
int istep=0;
int div[length] = {0};
while(input>0){
  input = input/2;
  div[istep] = input%2;
  istep++;
 }

static int binary[length];
//binary = div;

for(int ij=1; ij<(length+1); ij++){
 binary[ij-1] = div[length-ij];
 }
return binary;
}


int getbinid(double val, int nbmx, double* array) {
  if (val<array[0]) return -2;
  for (int ix=0; ix<=nbmx; ix++) {
    if (val < array[ix]) return ix-1;
  }
  return -3;
}

double theta_to_eta(double theta) { return -log(tan(theta/2.)); }

double PhiInRange(const double& phi) {
  double phiout = phi;

  if( phiout > 2*M_PI || phiout < -2*M_PI) {
    phiout = fmod( phiout, 2*M_PI);
  }
  if (phiout <= -M_PI) phiout += 2*M_PI;
  else if (phiout >  M_PI) phiout -= 2*M_PI;

  return phiout;
}

double delta2R(double eta1, double phi1, double eta2, double phi2) {
  return sqrt(pow(eta1 - eta2,2) +pow(PhiInRange(phi1 - phi2),2));
}

  unsigned ievt;
  
  static const int njetmx =20; 
  
  double Rho ;
    
  int nvert;
  int nchict;
  int npu_vert;

  double event_weight;
  double weight;
  double weighttrg[nHLTmx];
  double tot_weight = 0;

  int ihlt[nHLTmx];

  int trig_value;

  bool isMC = false;
  float pthat;

  int njets[nalgo] ;
  int pfjetmul[nalgo][njetmx] ;
  float pfjetenr[nalgo][njetmx], pfjetmom[nalgo][njetmx], pfjetpT[nalgo][njetmx], pfjetarea[nalgo][njetmx], pfjetthe[nalgo][njetmx], pfjety[nalgo][njetmx], pfjetphi[nalgo][njetmx],  pfjetpTup[nalgo][njetmx], pfjetpTdn[nalgo][njetmx], pfjetJEC[nalgo][njetmx], pfjetJECL1[nalgo][njetmx], pfjetJECL2[nalgo][njetmx], pfjetJECL2L3[nalgo][njetmx], pfjetwidth[nalgo][njetmx];
  bool pfjettightID[nalgo][njetmx], pfjetlooseID[nalgo][njetmx] ;
  double trig_weight[nalgo];
 
  int npfjets01;
  int pfjetmul01[njetmx];
  float pfjetenr01[njetmx], pfjetpT01[njetmx], pfjetarea01[njetmx], pfjety01[njetmx], pfjetphi01[njetmx], pfjetpTup01[njetmx], pfjetpTdn01[njetmx], pfjetJEC01[njetmx], pfjetJECL101[njetmx], pfjetJECL201[njetmx], pfjetJECL2L301[njetmx], pfjetwidth01[njetmx];
  bool pfjettightID01[njetmx],  pfjetlooseID01[njetmx]   ;
  double trig_weight01;  

  int npfjets02;
  int pfjetmul02[njetmx];
  float pfjetenr02[njetmx], pfjetpT02[njetmx], pfjetarea02[njetmx], pfjety02[njetmx], pfjetphi02[njetmx], pfjetpTup02[njetmx], pfjetpTdn02[njetmx], pfjetJEC02[njetmx], pfjetJECL102[njetmx], pfjetJECL202[njetmx], pfjetJECL2L302[njetmx], pfjetwidth02[njetmx];
  bool pfjettightID02[njetmx],  pfjetlooseID02[njetmx]   ;
  double trig_weight02;  

  int npfjets03;
  int pfjetmul03[njetmx];
  float pfjetenr03[njetmx], pfjetpT03[njetmx], pfjetarea03[njetmx], pfjety03[njetmx], pfjetphi03[njetmx], pfjetpTup03[njetmx], pfjetpTdn03[njetmx], pfjetJEC03[njetmx], pfjetJECL103[njetmx], pfjetJECL203[njetmx], pfjetJECL2L303[njetmx], pfjetwidth03[njetmx];
  bool pfjettightID03[njetmx],  pfjetlooseID03[njetmx]   ;
  double trig_weight03;

  int npfjets04;
  int pfjetmul04[njetmx];
  float pfjetenr04[njetmx], pfjetpT04[njetmx], pfjetarea04[njetmx], pfjety04[njetmx], pfjetphi04[njetmx], pfjetpTup04[njetmx], pfjetpTdn04[njetmx], pfjetJEC04[njetmx], pfjetJECL104[njetmx], pfjetJECL204[njetmx], pfjetJECL2L304[njetmx], pfjetwidth04[njetmx];
  bool pfjettightID04[njetmx],  pfjetlooseID04[njetmx]   ;
  double trig_weight04;

  int npfjets05;
  int pfjetmul05[njetmx];
  float pfjetenr05[njetmx], pfjetpT05[njetmx], pfjetarea05[njetmx], pfjety05[njetmx], pfjetphi05[njetmx], pfjetpTup05[njetmx], pfjetpTdn05[njetmx], pfjetJEC05[njetmx], pfjetJECL105[njetmx], pfjetJECL205[njetmx], pfjetJECL2L305[njetmx], pfjetwidth05[njetmx];
  bool pfjettightID05[njetmx],  pfjetlooseID05[njetmx]   ;
  double trig_weight05;

  int npfjets06;
  int pfjetmul06[njetmx];
  float pfjetenr06[njetmx], pfjetpT06[njetmx], pfjetarea06[njetmx], pfjety06[njetmx], pfjetphi06[njetmx], pfjetpTup06[njetmx], pfjetpTdn06[njetmx], pfjetJEC06[njetmx], pfjetJECL106[njetmx], pfjetJECL206[njetmx], pfjetJECL2L306[njetmx], pfjetwidth06[njetmx];
  bool pfjettightID06[njetmx],  pfjetlooseID06[njetmx]   ;
  double trig_weight06;

  int npfjets07;
  int pfjetmul07[njetmx];
  float pfjetenr07[njetmx], pfjetpT07[njetmx], pfjetarea07[njetmx], pfjety07[njetmx], pfjetphi07[njetmx], pfjetpTup07[njetmx], pfjetpTdn07[njetmx], pfjetJEC07[njetmx], pfjetJECL107[njetmx], pfjetJECL207[njetmx], pfjetJECL2L307[njetmx], pfjetwidth07[njetmx];
  bool pfjettightID07[njetmx] ,  pfjetlooseID07[njetmx]  ;
  double trig_weight07;

  int npfjets08;
  int pfjetmul08[njetmx];
  float pfjetenr08[njetmx], pfjetpT08[njetmx], pfjetarea08[njetmx], pfjety08[njetmx], pfjetphi08[njetmx], pfjetpTup08[njetmx], pfjetpTdn08[njetmx], pfjetJEC08[njetmx], pfjetJECL108[njetmx], pfjetJECL208[njetmx], pfjetJECL2L308[njetmx], pfjetwidth08[njetmx];
  bool pfjettightID08[njetmx],  pfjetlooseID08[njetmx]   ;
  double trig_weight08;

  int npfjets09;
  int pfjetmul09[njetmx];
  float pfjetenr09[njetmx], pfjetpT09[njetmx], pfjetarea09[njetmx], pfjety09[njetmx], pfjetphi09[njetmx], pfjetpTup09[njetmx], pfjetpTdn09[njetmx], pfjetJEC09[njetmx], pfjetJECL109[njetmx], pfjetJECL209[njetmx], pfjetJECL2L309[njetmx], pfjetwidth09[njetmx];
  bool pfjettightID09[njetmx],  pfjetlooseID09[njetmx] ;
  double trig_weight09;

  int npfjets10;
  int pfjetmul10[njetmx];
  float pfjetenr10[njetmx], pfjetpT10[njetmx], pfjetarea10[njetmx], pfjety10[njetmx], pfjetphi10[njetmx], pfjetpTup10[njetmx], pfjetpTdn10[njetmx], pfjetJEC10[njetmx], pfjetJECL110[njetmx], pfjetJECL210[njetmx], pfjetJECL2L310[njetmx], pfjetwidth10[njetmx];
  bool pfjettightID10[njetmx],  pfjetlooseID10[njetmx]   ;
  double trig_weight10;

  int npfjets11;
  int pfjetmul11[njetmx];
  float pfjetenr11[njetmx], pfjetpT11[njetmx], pfjetarea11[njetmx], pfjety11[njetmx], pfjetphi11[njetmx], pfjetpTup11[njetmx], pfjetpTdn11[njetmx], pfjetJEC11[njetmx], pfjetJECL111[njetmx], pfjetJECL211[njetmx], pfjetJECL2L311[njetmx], pfjetwidth11[njetmx];
  bool pfjettightID11[njetmx],  pfjetlooseID11[njetmx]   ;
  double trig_weight11;

  int npfjets12;
  int pfjetmul12[njetmx];
  float pfjetenr12[njetmx], pfjetpT12[njetmx], pfjetarea12[njetmx], pfjety12[njetmx], pfjetphi12[njetmx], pfjetpTup12[njetmx], pfjetpTdn12[njetmx], pfjetJEC12[njetmx], pfjetJECL112[njetmx], pfjetJECL212[njetmx], pfjetJECL2L312[njetmx], pfjetwidth12[njetmx];
  bool pfjettightID12[njetmx],  pfjetlooseID12[njetmx]   ;
  double trig_weight12;  

  int npfjets13;
  int pfjetmul13[njetmx];
  float pfjetenr13[njetmx], pfjetpT13[njetmx], pfjetarea13[njetmx], pfjety13[njetmx], pfjetphi13[njetmx], pfjetpz13[njetmx], pfjettightID13[njetmx]  ;
  
  int npfjets14;
  int pfjetmul14[njetmx];
  float pfjetenr14[njetmx], pfjetpT14[njetmx], pfjetarea14[njetmx], pfjety14[njetmx], pfjetphi14[njetmx], pfjetpz14[njetmx], pfjettightID14[njetmx]  ;
  
  int npfjets15;
  int pfjetmul15[njetmx];
  float pfjetenr15[njetmx], pfjetpT15[njetmx], pfjetarea15[njetmx], pfjety15[njetmx], pfjetphi15[njetmx], pfjetpz15[njetmx], pfjettightID15[njetmx]  ;

  
  static const int ngenjetmx =20;

  int ngenjets[nalgo] ;
  int genjetmul[nalgo];
  float genjetenr[nalgo][njetmx], genjetmom[nalgo][njetmx], genjetpT[nalgo][njetmx], genjetpz[nalgo][njetmx], genjetarea[nalgo][njetmx], genjetthe[nalgo][njetmx], genjety[nalgo][njetmx], genjetphi[nalgo][njetmx] ;

  int ngenjets01;
  int genjetmul01[njetmx];
  float genjetenr01[njetmx], genjetpT01[njetmx], genjetarea01[njetmx], genjety01[njetmx], genjetphi01[njetmx];

  int ngenjets02;
  int genjetmul02[njetmx];
  float genjetenr02[njetmx], genjetpT02[njetmx], genjetarea02[njetmx], genjety02[njetmx], genjetphi02[njetmx] ;

  int ngenjets03;
  int genjetmul03[njetmx];
  float genjetenr03[njetmx], genjetpT03[njetmx], genjetarea03[njetmx], genjety03[njetmx], genjetphi03[njetmx] ;

  int ngenjets04;
  int genjetmul04[njetmx];
  float genjetenr04[njetmx], genjetpT04[njetmx], genjetarea04[njetmx], genjety04[njetmx], genjetphi04[njetmx] ;

  int ngenjets05;
  int genjetmul05[njetmx];
  float genjetenr05[njetmx], genjetpT05[njetmx], genjetarea05[njetmx], genjety05[njetmx], genjetphi05[njetmx] ;

  int ngenjets06;
  int genjetmul06[njetmx];
  float genjetenr06[njetmx], genjetpT06[njetmx], genjetarea06[njetmx], genjety06[njetmx], genjetphi06[njetmx] ;
 
  int ngenjets07;
  int genjetmul07[njetmx];
  float genjetenr07[njetmx], genjetpT07[njetmx], genjetarea07[njetmx], genjety07[njetmx], genjetphi07[njetmx] ;

  int ngenjets08;
  int genjetmul08[njetmx];
  float genjetenr08[njetmx], genjetpT08[njetmx], genjetarea08[njetmx], genjety08[njetmx], genjetphi08[njetmx] ;

  int ngenjets09;
  int genjetmul09[njetmx];
  float genjetenr09[njetmx], genjetpT09[njetmx], genjetarea09[njetmx], genjety09[njetmx], genjetphi09[njetmx] ;

  int ngenjets10;
  int genjetmul10[njetmx];
  float genjetenr10[njetmx], genjetpT10[njetmx], genjetarea10[njetmx], genjety10[njetmx], genjetphi10[njetmx] ;

  int ngenjets11;
  int genjetmul11[njetmx];
  float genjetenr11[njetmx], genjetpT11[njetmx], genjetarea11[njetmx], genjety11[njetmx], genjetphi11[njetmx] ;
  
  int ngenjets12;
  int genjetmul12[njetmx];
  float genjetenr12[njetmx], genjetpT12[njetmx], genjetarea12[njetmx], genjety12[njetmx], genjetphi12[njetmx] ;
  
  int ngenjets13;
  int genjetmul13[njetmx];
  float genjetenr13[njetmx], genjetpT13[njetmx], genjetarea13[njetmx], genjety13[njetmx], genjetphi13[njetmx] ;
  
  int ngenjets14;
  int genjetmul14[njetmx];
  float genjetenr14[njetmx], genjetpT14[njetmx], genjetarea14[njetmx], genjety14[njetmx], genjetphi14[njetmx] ;
  
  int ngenjets15;
  int genjetmul15[njetmx];
  float genjetenr15[njetmx], genjetpT15[njetmx], genjetarea15[njetmx], genjety15[njetmx], genjetphi15[njetmx];
  
  float miset , misphi , sumEt;
  
  int iRecoPTbin[nalgo] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};
  int iGenPTbin[nalgo] = {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};

  double ex_cor[nalgo][netarange][noptbins1] = {{{1.}}};
 
  bool ihlt01, ihlt02, ihlt03, ihlt04, ihlt05, ihlt06, ihlt07, ihlt08, ihlt09, ihlt10;
  
  const int nsrc = 9;
  const char* srcnames[nsrc] =
  {"PileUpDataMC","PileUpPtRef","PileUpPtBB","PileUpPtEC1","PileUpPtEC2","PileUpPtHF","PileUpMuZero","PileUpEnvelope","SubTotalPileUp"};
  std::vector<JetCorrectionUncertainty*> vsrc1(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc2(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc3(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc4(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc5(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc6(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc7(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc8(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc9(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc10(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc11(nsrc);
  std::vector<JetCorrectionUncertainty*> vsrc12(nsrc);
 
void fillarray() {
  
  miset = miset;
  misphi = misphi;
  sumEt = sumEt;
  
  nvert = nvert;
  nchict = nchict;
  event_weight = event_weight;
  tot_weight+=event_weight;
  pthat = pthat;
 
  trig_value = trig_value;

  for(int ht=0; ht<nHLTmx; ht++){

   ihlt[ht] = 0;

   switch(ht){

   case 0:
   ihlt[ht] = ihlt01;
   break;

   case 1:
   ihlt[ht] = ihlt02;
   break;

   case 2:
   ihlt[ht] = ihlt03;
   break;

   case 3:
   ihlt[ht] = ihlt04;
   break;

   case 4:
   ihlt[ht] = ihlt05;
   break;

   case 5:
   ihlt[ht] = ihlt06;
   break;

   case 6:
   ihlt[ht] = ihlt07;
   break;

   case 7:
   ihlt[ht] = ihlt08;
   break;

   case 8:
   ihlt[ht] = ihlt09;
   break;

   case 9:
   ihlt[ht] = ihlt10;
   break;

    }

  }
 
  for(int ix=0; ix<nalgo; ix++){
    njets[ix] = 0;
    ngenjets[ix] = 0;
    
    switch(ix){
      
    case 0:
      
       if(pfjettightID01[0]!=1) break;
       if(isMC){
         if(pfjetpT01[0]>(3.*pthat)) break;
        } 
    
      trig_weight[ix] = trig_weight01;

      for(int jet=0; jet<npfjets01; jet++){
	
	if(pfjettightID01[jet]!=1) continue;
	if(pfjetpT01[jet]<minPFPt) continue ;
	
	pfjetenr[ix][njets[ix]] = pfjetenr01[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT01[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea01[jet] ;
	pfjety[ix][njets[ix]] = pfjety01[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi01[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID01[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID01[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup01[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn01[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC01[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL101[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL201[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L301[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth01[jet];

	njets[ix]++;
      }
     

      if(isMC){
      for(int gjet=0; gjet<ngenjets01; gjet++){
	
	if(genjetpT01[gjet]<minPFPt) continue ;	
	
	genjetenr[ix][ngenjets[ix]] = genjetenr01[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT01[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea01[gjet];
	genjety[ix][ngenjets[ix]] = genjety01[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi01[gjet];
	
	ngenjets[ix]++;
      }	
     }  
      break;	
      
    case 1:
      
       if(pfjettightID02[0]!=1) break;
       if(isMC){
         if(pfjetpT02[0]>(3.*pthat)) break;
        }      

      trig_weight[ix] = trig_weight02;

      for(int jet=0; jet<npfjets02; jet++){
	
	if(pfjettightID02[jet]!=1) continue;
	if(pfjetpT02[jet]<minPFPt) continue ;
	
	pfjetenr[ix][njets[ix]] = pfjetenr02[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT02[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea02[jet] ;
	pfjety[ix][njets[ix]] = pfjety02[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi02[jet] ;
    pfjettightID[ix][njets[ix]] = pfjettightID02[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID02[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup02[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn02[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC02[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL102[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL202[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L302[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth02[jet];
	
	njets[ix]++;
      }
     
     if(isMC){
      for(int gjet=0; gjet<ngenjets02; gjet++){
	
	if(genjetpT02[gjet]<minPFPt) continue ;	
	
	genjetenr[ix][ngenjets[ix]] = genjetenr02[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT02[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea02[gjet];
	genjety[ix][ngenjets[ix]] = genjety02[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi02[gjet];
	
	ngenjets[ix]++;
      }
     }      

      break;	
      
      
    case 2:
      
       if(pfjettightID03[0]!=1) break;
       if(isMC){
         if(pfjetpT03[0]>(3.*pthat)) break;
        }      

      trig_weight[ix] = trig_weight03;

      for(int jet=0; jet<npfjets03; jet++){
	
	if(pfjettightID03[jet]!=1) continue;
	if(pfjetpT03[jet]<minPFPt) continue ;
	
	pfjetenr[ix][njets[ix]] = pfjetenr03[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT03[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea03[jet] ;
	pfjety[ix][njets[ix]] = pfjety03[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi03[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID03[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID03[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup03[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn03[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC03[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL103[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL203[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L303[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth03[jet];
	
	njets[ix]++;
      }
     
      if(isMC){
      for(int gjet=0; gjet<ngenjets03; gjet++){
	
	if(genjetpT03[gjet]<minPFPt) continue ;	
	
	genjetenr[ix][ngenjets[ix]] = genjetenr03[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT03[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea03[gjet];
	genjety[ix][ngenjets[ix]] = genjety03[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi03[gjet];
	
	ngenjets[ix]++;
      }
    }      

      break;	
      
      
    case 3:
      
       if(pfjettightID04[0]!=1) break;
       if(isMC){
         if(pfjetpT04[0]>(3.*pthat)) break;
        }  
    
      trig_weight[ix] = trig_weight04;

      for(int jet=0; jet<npfjets04; jet++){
	
	if(pfjettightID04[jet]!=1) continue;
	if(pfjetpT04[jet]<minPFPt) continue ;
	
	pfjetenr[ix][njets[ix]] = pfjetenr04[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT04[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea04[jet] ;
	pfjety[ix][njets[ix]] = pfjety04[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi04[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID04[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID04[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup04[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn04[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC04[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL104[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL204[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L304[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth04[jet];
				
	njets[ix]++;
      }
  
     if(isMC){	
      for(int gjet=0; gjet<ngenjets04; gjet++){
						
	if(genjetpT04[gjet]<minPFPt) continue ;	
					
	genjetenr[ix][ngenjets[ix]] = genjetenr04[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT04[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea04[gjet];
	genjety[ix][ngenjets[ix]] = genjety04[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi04[gjet];
				 
	ngenjets[ix]++;
      }
    }				
      break;	
		
		    
    case 4:
     
      if(pfjettightID05[0]!=1) break;
      if(isMC){
         if(pfjetpT05[0]>(3.*pthat)) break;
        }  
   
      trig_weight[ix] = trig_weight05;

      for(int jet=0; jet<npfjets05; jet++){
	
	if(pfjettightID05[jet]!=1) continue;
	if(pfjetpT05[jet]<minPFPt) continue ;
				
	pfjetenr[ix][njets[ix]] = pfjetenr05[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT05[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea05[jet] ;
	pfjety[ix][njets[ix]] = pfjety05[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi05[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID05[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID05[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup05[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn05[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC05[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL105[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL205[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L305[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth05[jet];
				
	njets[ix]++;
      }

    if(isMC){				
      for(int gjet=0; gjet<ngenjets05; gjet++){
						
	if(genjetpT05[gjet]<minPFPt) continue ;	
					
	genjetenr[ix][ngenjets[ix]] = genjetenr05[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT05[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea05[gjet];
	genjety[ix][ngenjets[ix]] = genjety05[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi05[gjet];
				 
	ngenjets[ix]++;
      }
     }
      break;		
			
		
    case 5:
      
       if(pfjettightID06[0]!=1) break;
       if(isMC){
         if(pfjetpT06[0]>(3.*pthat)) break;
        } 
     
      trig_weight[ix] = trig_weight06;

      for(int jet=0; jet<npfjets06; jet++){
	
	if(pfjettightID06[jet]!=1) continue;
	if(pfjetpT06[jet]<minPFPt) continue ;
				
	pfjetenr[ix][njets[ix]] = pfjetenr06[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT06[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea06[jet] ;
	pfjety[ix][njets[ix]] = pfjety06[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi06[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID06[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID06[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup06[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn06[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC06[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL106[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL206[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L306[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth06[jet];
				
	njets[ix]++;
      }

     if(isMC){	
      for(int gjet=0; gjet<ngenjets06; gjet++){
						
	if(genjetpT06[gjet]<minPFPt) continue ;	
					
	genjetenr[ix][ngenjets[ix]] = genjetenr06[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT06[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea06[gjet];
	genjety[ix][ngenjets[ix]] = genjety06[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi06[gjet];
			 
	ngenjets[ix]++;
      }
     }					
      break;	
			
			
    case 6:
    
      if(pfjettightID07[0]!=1) break;
      if(isMC){
         if(pfjetpT07[0]>(3.*pthat)) break;
        }   
    
      trig_weight[ix] = trig_weight07;

      for(int jet=0; jet<npfjets07; jet++){
				
	if(pfjettightID07[jet]!=1) continue;
	if(pfjetpT07[jet]<minPFPt) continue ;
				
	pfjetenr[ix][njets[ix]] = pfjetenr07[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT07[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea07[jet] ;
	pfjety[ix][njets[ix]] = pfjety07[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi07[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID07[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID07[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup07[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn07[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC07[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL107[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL207[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L307[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth07[jet];
				
	njets[ix]++;
      }

    if(isMC){			
      for(int gjet=0; gjet<ngenjets07; gjet++){
						
	if(genjetpT07[gjet]<minPFPt) continue ;	
					
	genjetenr[ix][ngenjets[ix]] = genjetenr07[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT07[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea07[gjet];
	genjety[ix][ngenjets[ix]] = genjety07[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi07[gjet];
				 
	ngenjets[ix]++;
      }
     }				
      break;	
			
			
    case 7:
    
     if(pfjettightID08[0]!=1) break;
     if(isMC){
         if(pfjetpT08[0]>(3.*pthat)) break;
        } 

      trig_weight[ix] = trig_weight08;
   
      for(int jet=0; jet<npfjets08; jet++){
				
	if(pfjettightID08[jet]!=1) continue;
	if(pfjetpT08[jet]<minPFPt) continue ;
				
	pfjetenr[ix][njets[ix]] = pfjetenr08[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT08[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea08[jet] ;
	pfjety[ix][njets[ix]] = pfjety08[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi08[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID08[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID08[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup08[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn08[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC08[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL108[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL208[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L308[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth08[jet];
				
	njets[ix]++;
      }

    if(isMC){	
      for(int gjet=0; gjet<ngenjets08; gjet++){
						
	if(genjetpT08[gjet]<minPFPt) continue ;	
					
	genjetenr[ix][ngenjets[ix]] = genjetenr08[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT08[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea08[gjet];
	genjety[ix][ngenjets[ix]] = genjety08[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi08[gjet];
				 
	ngenjets[ix]++;
      }
    }
				 
      break;	
			
			
    case 8:
      
       if(pfjettightID09[0]!=1) break;
       if(isMC){
         if(pfjetpT09[0]>(3.*pthat)) break;
        }   

      trig_weight[ix] = trig_weight09;   

      for(int jet=0; jet<npfjets09; jet++){
	
	if(pfjettightID09[jet]!=1) continue;
	if(pfjetpT09[jet]<minPFPt) continue ;
				
	pfjetenr[ix][njets[ix]] = pfjetenr09[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT09[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea09[jet] ;
	pfjety[ix][njets[ix]] = pfjety09[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi09[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID09[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID09[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup09[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn09[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC09[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL109[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL209[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L309[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth09[jet];
				
	njets[ix]++;
      }

    if(isMC){		
      for(int gjet=0; gjet<ngenjets09; gjet++){
						
	if(genjetpT09[gjet]<minPFPt) continue ;	
					
	genjetenr[ix][ngenjets[ix]] = genjetenr09[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT09[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea09[gjet];
	genjety[ix][ngenjets[ix]] = genjety09[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi09[gjet];
				 
	ngenjets[ix]++;
      }
     }
      break;	
			
			
    case 9:
     
      if(pfjettightID10[0]!=1) break;
      if(isMC){
         if(pfjetpT10[0]>(3.*pthat)) break;
        }     

      trig_weight[ix] = trig_weight10;

      for(int jet=0; jet<npfjets10; jet++){
	
	if(pfjettightID10[jet]!=1) continue;
	if(pfjetpT10[jet]<minPFPt) continue ;
		
	pfjetenr[ix][njets[ix]] = pfjetenr10[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT10[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea10[jet] ;
	pfjety[ix][njets[ix]] = pfjety10[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi10[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID10[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID10[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup10[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn10[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC10[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL110[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL210[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L310[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth10[jet];
				
	njets[ix]++;
      }
      
    if(isMC){
      for(int gjet=0; gjet<ngenjets10; gjet++){
						
	if(genjetpT10[gjet]<minPFPt) continue ;	
					
	genjetenr[ix][ngenjets[ix]] = genjetenr10[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT10[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea10[gjet];
	genjety[ix][ngenjets[ix]] = genjety10[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi10[gjet];
				 
	ngenjets[ix]++;
      }
     }
      break;				
			
    case 10:
      
      if(pfjettightID11[0]!=1) break;
      if(isMC){
         if(pfjetpT11[0]>(3.*pthat)) break;
        }   
   
      trig_weight[ix] = trig_weight11;

      for(int jet=0; jet<npfjets11; jet++){
				
	if(pfjettightID11[jet]!=1) continue;
	if(pfjetpT11[jet]<minPFPt) continue ;
				
	pfjetenr[ix][njets[ix]] = pfjetenr11[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT11[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea11[jet] ;
	pfjety[ix][njets[ix]] = pfjety11[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi11[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID11[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID11[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup11[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn11[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC11[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL111[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL211[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L311[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth11[jet];
				
	njets[ix]++;
      }

     if(isMC){	
      for(int gjet=0; gjet<ngenjets11; gjet++){	
					
	if(genjetpT11[gjet]<minPFPt) continue ;	
					
	genjetenr[ix][ngenjets[ix]] = genjetenr11[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT11[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea11[gjet];
	genjety[ix][ngenjets[ix]] = genjety11[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi11[gjet];
			 
	ngenjets[ix]++;
      }
     }
      break;				
			
    case 11:
      
      if(pfjettightID12[0]!=1) break;
      if(isMC){
        if(pfjetpT12[0]>(3.*pthat)) break;
        }      

      trig_weight[ix] = trig_weight12;

      for(int jet=0; jet<npfjets12; jet++){
				
	
	if(pfjettightID12[jet]!=1) continue;
	if(pfjetpT12[jet]<minPFPt) continue ;
				
	pfjetenr[ix][njets[ix]] = pfjetenr12[jet] ;
	pfjetpT[ix][njets[ix]] =  pfjetpT12[jet];
	pfjetarea[ix][njets[ix]] = pfjetarea12[jet] ;
	pfjety[ix][njets[ix]] = pfjety12[jet];
	pfjetphi[ix][njets[ix]] = pfjetphi12[jet] ;
	pfjettightID[ix][njets[ix]] = pfjettightID12[jet];
	pfjetlooseID[ix][njets[ix]] = pfjetlooseID12[jet];
	pfjetpTup[ix][njets[ix]] = pfjetpTup12[jet] ;
	pfjetpTdn[ix][njets[ix]] = pfjetpTdn12[jet] ;
	pfjetJEC[ix][njets[ix]] = pfjetJEC12[jet];
	pfjetJECL1[ix][njets[ix]] = pfjetJECL112[jet];
	pfjetJECL2[ix][njets[ix]] = pfjetJECL212[jet];
	pfjetJECL2L3[ix][njets[ix]] = pfjetJECL2L312[jet];
	pfjetwidth[ix][njets[ix]] = pfjetwidth12[jet];
				
	njets[ix]++;
      }

     if(isMC){				
      for(int gjet=0; gjet<ngenjets12; gjet++){
					
	if(genjetpT12[gjet]<minPFPt) continue ;	
					
	genjetenr[ix][ngenjets[ix]] = genjetenr12[gjet];
	genjetpT[ix][ngenjets[ix]] = genjetpT12[gjet];
	genjetarea[ix][ngenjets[ix]] = genjetarea12[gjet];
	genjety[ix][ngenjets[ix]] = genjety12[gjet];;
	genjetphi[ix][ngenjets[ix]] = genjetphi12[gjet];
				 
	ngenjets[ix]++;
      }
     }
      break;	
			
    }//switch(ix)
  }//ix  
}//fillarray
				
